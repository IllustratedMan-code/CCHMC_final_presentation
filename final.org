#+OPTIONS: toc:nil num:nil
#+REVEAL_ROOT: ./reveal.js
#+REVEAL_TITLE_SLIDE:
#+REVEAL_THEME: serif
#+EXPORT_FILE_NAME: index.html
* Journey through the Pipeline
+ COOP Student from UC
+ Computational Team
** What Have I been doing?
+ =trackgen=
+ =compileqc=
+ =atac_seq_mixtape=
+ Mixtape Engineers
* TODO Trackgen
+ Generate UCSC trackhub config files
  ADD GIF HERE
** Usage
#+begin_src bash
trackgen --help # get some help
trackgen config # generates trackgen config, finds required files
trackgen hub # generates hub config
#+end_src
[[file:trackgenhelp.png]]
** Containers and Modules
+ Module is stable, container is unstable
#+begin_src bash
module load trackgen
trackgen --help
# is equivalent to
module load singularity
singularity run $TEAM/lew2mz/containers/trackgen --help
#+end_src
** Features
+ Functional config language (modified JSON/YAML)
+ Regex/glob based detection of files
+ JSON/YAML to hub conversion
** TODO Development strategy
+ Some unit tests
+ Easily extendable
+ Automatic Documentation (LINK HERE)
** TODO Architecture
| High level                    | Low level                    |
|-------------------------------+------------------------------|
| [[file:trackgen_high_level.png]] | [[file:trackgen_low_level.png]] |

* Compileqc
+ Generate QC sheet from pipeline
+ Budget Multiqc
** Usage
#+begin_src bash
module load singularity
singularity run $TEAM/lew2mz/containers/compileqc --help
#+end_src
[[file:compileqchelp.png]]
** Output
+ Configurable shortname
+ Different Sheets for each data type
[[file:spreadsheet.png]]
** Features
Aggregate the following output
+ Homer
+ (TF/NONTF) RELI
+ ENCODE
** TODO Development strategy
+ Test based development
+ Object oriented
+ Design before code
+ Automatic documentation (LINK)
** TODO ARCHITECTURE
| High level                    | Low level                    |
|-------------------------------+------------------------------|
| [[file:compileqc_high_level.png]] | [[file:compileqc_low_level.png]] |
* Atac seq mixtape
+ Nextflow pipeline to automate analysis
** Contribution
+ Make UI
+ compilqc integration
* Make UI
+ Intuitive interface
+ Automatic help generation
+ Error detection
** Usage
#+begin_src bash
make # or make help
make config # will walk you through data entry
make config # run it after data entry
make run # run the pipeline (will fail)
#+end_src
** TODO Demo
ADD GIF HERE
** Advantages over the old method
+ Users don't have to learn a new configuration framework
+ Options have sane defaults
* Compileqc integration
+ New and improved QC sheet
** Implementation details
+ Added an easy way to add new flags
+ new mapping json input allows for shortname in QC sheet
+ No module dependencies, uses singularity containers
* Mixtape Engineers
+ Gitlab repo that facilitates team organization
+ Set of standards for new projects
** Agile Board
[[file:agile_board.png]]
** TODO Architecture
Add folder structure here
** Rationale (why not the wiki?)
The wiki is great for:
+ User Instructions
+ General Design documentation

The wiki is limited in:
+ Version control
+ Division of tasks
+ File viewing
